upstream django_backend {
    server unix:/run/uwsgi/backend_app.sock;
    # server 127.0.0.1:8001;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name backend.acme-company.site;
    charset utf-8;

    client_max_body_size 4M;

    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }
    location /static/ {
        alias /application/static/;
    }

    # For let's encrypt ack
    location /.well-known/ {
        alias /application/.well-known/;
    }

    location / {
        #        if ($http_origin ~* "(acme-delivery-service.github.io|backend.acme-company.site)" ) {
        #            add_header Access-Control-Allow-Origin "$http_origin" always;
        #        }
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Credentials 'true' always;
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

        include      uwsgi_params;
        uwsgi_pass   django_backend;
    }

    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/backend.acme-company.site/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/backend.acme-company.site/privkey.pem; # managed by Certbot
    ssl_session_cache shared:le_nginx_SSL:1m; # managed by Certbot
    ssl_session_timeout 1440m; # managed by Certbot

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # managed by Certbot
    ssl_prefer_server_ciphers on; # managed by Certbot

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-AES128-SHA256 ECDHE-ECDSA-AES256-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-SHA ECDHE-RSA-AES128-SHA256 ECDHE-RSA-AES256-SHA384 DHE-RSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES128-SHA DHE-RSA-AES256-SHA DHE-RSA-AES128-SHA256 DHE-RSA-AES256-SHA256 EDH-RSA-DES-CBC3-SHA"; # managed by Certbot


    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot

}
